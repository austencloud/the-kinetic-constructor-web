{"ast":null,"code":"var _jsxFileName = \"C:\\\\the-kinetic-constructor-web\\\\src\\\\components\\\\MenuBar\\\\SettingsButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsButton = () => {\n  _s();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const handleButtonClick = () => {\n    setIsDialogOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), isDialogOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-dialog\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Settings dialog content goes here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsDialogOpen(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsButton, \"kdxLf4O7tSmiZi3F0AsxHZT3Vao=\");\n_c = SettingsButton;\nexport default SettingsButton;\nvar _c;\n$RefreshReg$(_c, \"SettingsButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SettingsButton","_s","isDialogOpen","setIsDialogOpen","handleButtonClick","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/the-kinetic-constructor-web/src/components/MenuBar/SettingsButton.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst SettingsButton = () => {\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n\r\n  const handleButtonClick = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleButtonClick}>Settings</button>\r\n      {isDialogOpen && (\r\n        <div className=\"settings-dialog\">\r\n          <p>Settings dialog content goes here.</p>\r\n          <button onClick={() => setIsDialogOpen(false)}>Close</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC9BD,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBACEJ,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAQO,OAAO,EAAEF,iBAAkB;MAAAC,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpDR,YAAY,iBACXH,OAAA;MAAKY,SAAS,EAAC,iBAAiB;MAAAN,QAAA,gBAC9BN,OAAA;QAAAM,QAAA,EAAG;MAAkC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACzCX,OAAA;QAAQO,OAAO,EAAEA,CAAA,KAAMH,eAAe,CAAC,KAAK,CAAE;QAAAE,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACT,EAAA,CAlBID,cAAc;AAAAY,EAAA,GAAdZ,cAAc;AAoBpB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}