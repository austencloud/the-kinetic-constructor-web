{"ast":null,"code":"var _jsxFileName = \"C:\\\\the-kinetic-constructor-web\\\\src\\\\components\\\\SequenceWidget\\\\ButtonPanel\\\\SequenceWidgetButtonPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SequenceWidgetButtonPanel = ({\n  onAddToDictionary,\n  onSaveImage,\n  onViewFullScreen,\n  onMirrorSequence,\n  onSwapColors,\n  onRotateSequence,\n  onDeleteBeat,\n  onClearSequence\n}) => {\n  _s();\n  const [buttonSize, setButtonSize] = useState(50); // Default button size\n  const [panelHeight, setPanelHeight] = useState(0); // Track button panel height\n\n  const buttonGroups = [[{\n    icon: require(\"./icons/add_to_dictionary.png\"),\n    title: \"Add to Dictionary\",\n    onClick: onAddToDictionary\n  }, {\n    icon: require(\"./icons/save_image.png\"),\n    title: \"Save Image\",\n    onClick: onSaveImage\n  }, {\n    icon: require(\"./icons/eye.png\"),\n    title: \"View Full Screen\",\n    onClick: onViewFullScreen\n  }], [{\n    icon: require(\"./icons/mirror.png\"),\n    title: \"Mirror Sequence\",\n    onClick: onMirrorSequence\n  }, {\n    icon: require(\"./icons/yinyang1.png\"),\n    title: \"Swap Colors\",\n    onClick: onSwapColors\n  }, {\n    icon: require(\"./icons/rotate.png\"),\n    title: \"Rotate Sequence\",\n    onClick: onRotateSequence\n  }], [{\n    icon: require(\"./icons/delete.png\"),\n    title: \"Delete Beat\",\n    onClick: onDeleteBeat\n  }, {\n    icon: require(\"./icons/clear.png\"),\n    title: \"Clear Sequence\",\n    onClick: onClearSequence\n  }]];\n  useEffect(() => {\n    // Dynamically update button size and spacing based on panel height\n    const updateButtonSize = () => {\n      const panel = document.getElementById(\"buttonPanel\");\n      if (panel) {\n        const containerHeight = panel.offsetHeight; // Get the panel's height\n        const newSize = Math.max(40, Math.min(80, containerHeight / (buttonGroups.flat().length + 2))); // Dynamic size\n        setButtonSize(newSize);\n        setPanelHeight(containerHeight); // Update panel height for spacing\n      }\n    };\n    updateButtonSize();\n    window.addEventListener(\"resize\", updateButtonSize);\n    return () => window.removeEventListener(\"resize\", updateButtonSize);\n  }, []);\n  const buttonPanelStyles = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"10px\",\n    height: \"100%\",\n    gap: `${panelHeight / 20}px`,\n    // Dynamically calculate gap based on panel height\n    width: \"100%\"\n  };\n  const spacerStyles = {\n    height: `${panelHeight / 15}px` // Smaller gaps between groups\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"buttonPanel\",\n    style: buttonPanelStyles,\n    children: buttonGroups.map((group, groupIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [group.map((button, index) => /*#__PURE__*/_jsxDEV(Button, {\n        icon: button.icon,\n        title: button.title,\n        onClick: button.onClick,\n        buttonSize: buttonSize\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)), groupIndex < buttonGroups.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: spacerStyles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), \" \"]\n    }, groupIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(SequenceWidgetButtonPanel, \"eQqHuzu8MVbTbguXEQoTj1prR5s=\");\n_c = SequenceWidgetButtonPanel;\nexport default SequenceWidgetButtonPanel;\nvar _c;\n$RefreshReg$(_c, \"SequenceWidgetButtonPanel\");","map":{"version":3,"names":["React","useEffect","useState","Button","jsxDEV","_jsxDEV","SequenceWidgetButtonPanel","onAddToDictionary","onSaveImage","onViewFullScreen","onMirrorSequence","onSwapColors","onRotateSequence","onDeleteBeat","onClearSequence","_s","buttonSize","setButtonSize","panelHeight","setPanelHeight","buttonGroups","icon","require","title","onClick","updateButtonSize","panel","document","getElementById","containerHeight","offsetHeight","newSize","Math","max","min","flat","length","window","addEventListener","removeEventListener","buttonPanelStyles","display","flexDirection","alignItems","padding","height","gap","width","spacerStyles","id","style","children","map","group","groupIndex","Fragment","button","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/the-kinetic-constructor-web/src/components/SequenceWidget/ButtonPanel/SequenceWidgetButtonPanel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nconst SequenceWidgetButtonPanel = ({\r\n  onAddToDictionary,\r\n  onSaveImage,\r\n  onViewFullScreen,\r\n  onMirrorSequence,\r\n  onSwapColors,\r\n  onRotateSequence,\r\n  onDeleteBeat,\r\n  onClearSequence,\r\n}) => {\r\n  const [buttonSize, setButtonSize] = useState(50); // Default button size\r\n  const [panelHeight, setPanelHeight] = useState(0); // Track button panel height\r\n\r\n  const buttonGroups = [\r\n    [\r\n      {\r\n        icon: require(\"./icons/add_to_dictionary.png\"),\r\n        title: \"Add to Dictionary\",\r\n        onClick: onAddToDictionary,\r\n      },\r\n      {\r\n        icon: require(\"./icons/save_image.png\"),\r\n        title: \"Save Image\",\r\n        onClick: onSaveImage,\r\n      },\r\n      {\r\n        icon: require(\"./icons/eye.png\"),\r\n        title: \"View Full Screen\",\r\n        onClick: onViewFullScreen,\r\n      },\r\n    ],\r\n    [\r\n      {\r\n        icon: require(\"./icons/mirror.png\"),\r\n        title: \"Mirror Sequence\",\r\n        onClick: onMirrorSequence,\r\n      },\r\n      {\r\n        icon: require(\"./icons/yinyang1.png\"),\r\n        title: \"Swap Colors\",\r\n        onClick: onSwapColors,\r\n      },\r\n      {\r\n        icon: require(\"./icons/rotate.png\"),\r\n        title: \"Rotate Sequence\",\r\n        onClick: onRotateSequence,\r\n      },\r\n    ],\r\n    [\r\n      {\r\n        icon: require(\"./icons/delete.png\"),\r\n        title: \"Delete Beat\",\r\n        onClick: onDeleteBeat,\r\n      },\r\n      {\r\n        icon: require(\"./icons/clear.png\"),\r\n        title: \"Clear Sequence\",\r\n        onClick: onClearSequence,\r\n      },\r\n    ],\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // Dynamically update button size and spacing based on panel height\r\n    const updateButtonSize = () => {\r\n      const panel = document.getElementById(\"buttonPanel\");\r\n      if (panel) {\r\n        const containerHeight = panel.offsetHeight; // Get the panel's height\r\n        const newSize = Math.max(40, Math.min(80, containerHeight / (buttonGroups.flat().length + 2))); // Dynamic size\r\n        setButtonSize(newSize);\r\n        setPanelHeight(containerHeight); // Update panel height for spacing\r\n      }\r\n    };\r\n\r\n    updateButtonSize();\r\n    window.addEventListener(\"resize\", updateButtonSize);\r\n    return () => window.removeEventListener(\"resize\", updateButtonSize);\r\n  }, []);\r\n\r\n  const buttonPanelStyles = {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: \"10px\",\r\n    height: \"100%\",\r\n    gap: `${panelHeight / 20}px`, // Dynamically calculate gap based on panel height\r\n    width: \"100%\",\r\n  };\r\n\r\n  const spacerStyles = {\r\n    height: `${panelHeight / 15}px`, // Smaller gaps between groups\r\n  };\r\n\r\n  return (\r\n    <div id=\"buttonPanel\" style={buttonPanelStyles}>\r\n      {buttonGroups.map((group, groupIndex) => (\r\n        <React.Fragment key={groupIndex}>\r\n          {group.map((button, index) => (\r\n            <Button\r\n              key={index}\r\n              icon={button.icon}\r\n              title={button.title}\r\n              onClick={button.onClick}\r\n              buttonSize={buttonSize}\r\n            />\r\n          ))}\r\n          {groupIndex < buttonGroups.length - 1 && (\r\n            <div style={spacerStyles}></div>\r\n          )} {/* Spacer between groups */}\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SequenceWidgetButtonPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}