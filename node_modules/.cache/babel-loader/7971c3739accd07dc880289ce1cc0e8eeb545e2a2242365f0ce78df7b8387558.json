{"ast":null,"code":"var _jsxFileName = \"C:\\\\the-kinetic-constructor-web\\\\src\\\\components\\\\Backgrounds\\\\SnowfallBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport SnowflakeManager from \"./SnowflakeManager\";\nimport SantaManager from \"./SantaManager\";\nimport ShootingStarManager from \"./ShootingStarManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnowfallBackground = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const snowflakeManager = useRef(new SnowflakeManager());\n  const santaManager = useRef(new SantaManager());\n  const shootingStarManager = useRef(new ShootingStarManager());\n  const backgroundCanvasSize = {\n    width: 1920,\n    height: 1080\n  }; // Large canvas size\n\n  const animate = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const width = backgroundCanvasSize.width;\n    const height = backgroundCanvasSize.height;\n    ctx.clearRect(0, 0, width, height);\n\n    // Draw gradient background\n    const gradient = ctx.createLinearGradient(0, 0, 0, height);\n    gradient.addColorStop(0, \"#142030\");\n    gradient.addColorStop(1, \"#325078\");\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, width, height);\n\n    // Draw and animate elements\n    snowflakeManager.current.draw(ctx, width, height);\n    santaManager.current.draw(ctx, width, height);\n    shootingStarManager.current.manageShootingStar(width, height);\n    shootingStarManager.current.animateShootingStar(width, height);\n    shootingStarManager.current.draw(ctx, width, height);\n    requestAnimationFrame(animate);\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set the oversized canvas size\n    canvas.width = backgroundCanvasSize.width;\n    canvas.height = backgroundCanvasSize.height;\n\n    // Initialize managers once with the oversized canvas dimensions\n    snowflakeManager.current.initialize(backgroundCanvasSize.width, backgroundCanvasSize.height, 100);\n    santaManager.current.initialize(backgroundCanvasSize.width, backgroundCanvasSize.height);\n\n    // Attach the animation loop\n    requestAnimationFrame(animate);\n    const adjustViewport = () => {\n      // Update the viewport to fit the new window size\n      const ctx = canvas.getContext(\"2d\");\n      ctx.scale(window.innerWidth / backgroundCanvasSize.width, window.innerHeight / backgroundCanvasSize.height);\n    };\n    window.addEventListener(\"resize\", adjustViewport);\n    adjustViewport(); // Initial adjustment\n\n    return () => {\n      window.removeEventListener(\"resize\", adjustViewport);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n};\n_s(SnowfallBackground, \"mOOA1K7uWm+Bc6bA5cGaQfjTB94=\");\n_c = SnowfallBackground;\nexport default SnowfallBackground;\nvar _c;\n$RefreshReg$(_c, \"SnowfallBackground\");","map":{"version":3,"names":["React","useRef","useEffect","SnowflakeManager","SantaManager","ShootingStarManager","jsxDEV","_jsxDEV","SnowfallBackground","_s","canvasRef","snowflakeManager","santaManager","shootingStarManager","backgroundCanvasSize","width","height","animate","canvas","current","ctx","getContext","clearRect","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","draw","manageShootingStar","animateShootingStar","requestAnimationFrame","initialize","adjustViewport","scale","window","innerWidth","innerHeight","addEventListener","removeEventListener","ref","style","position","top","left","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/the-kinetic-constructor-web/src/components/Backgrounds/SnowfallBackground.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport SnowflakeManager from \"./SnowflakeManager\";\r\nimport SantaManager from \"./SantaManager\";\r\nimport ShootingStarManager from \"./ShootingStarManager\";\r\n\r\nconst SnowfallBackground = () => {\r\n  const canvasRef = useRef(null);\r\n  const snowflakeManager = useRef(new SnowflakeManager());\r\n  const santaManager = useRef(new SantaManager());\r\n  const shootingStarManager = useRef(new ShootingStarManager());\r\n  const backgroundCanvasSize = { width: 1920, height: 1080 }; // Large canvas size\r\n\r\n  const animate = () => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const width = backgroundCanvasSize.width;\r\n    const height = backgroundCanvasSize.height;\r\n\r\n    ctx.clearRect(0, 0, width, height);\r\n\r\n    // Draw gradient background\r\n    const gradient = ctx.createLinearGradient(0, 0, 0, height);\r\n    gradient.addColorStop(0, \"#142030\");\r\n    gradient.addColorStop(1, \"#325078\");\r\n    ctx.fillStyle = gradient;\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    // Draw and animate elements\r\n    snowflakeManager.current.draw(ctx, width, height);\r\n    santaManager.current.draw(ctx, width, height);\r\n    shootingStarManager.current.manageShootingStar(width, height);\r\n    shootingStarManager.current.animateShootingStar(width, height);\r\n    shootingStarManager.current.draw(ctx, width, height);\r\n\r\n    requestAnimationFrame(animate);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    // Set the oversized canvas size\r\n    canvas.width = backgroundCanvasSize.width;\r\n    canvas.height = backgroundCanvasSize.height;\r\n\r\n    // Initialize managers once with the oversized canvas dimensions\r\n    snowflakeManager.current.initialize(backgroundCanvasSize.width, backgroundCanvasSize.height, 100);\r\n    santaManager.current.initialize(backgroundCanvasSize.width, backgroundCanvasSize.height);\r\n\r\n    // Attach the animation loop\r\n    requestAnimationFrame(animate);\r\n\r\n    const adjustViewport = () => {\r\n      // Update the viewport to fit the new window size\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.scale(window.innerWidth / backgroundCanvasSize.width, window.innerHeight / backgroundCanvasSize.height);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", adjustViewport);\r\n    adjustViewport(); // Initial adjustment\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", adjustViewport);\r\n    };\r\n  }, []);\r\n\r\n  return <canvas ref={canvasRef} style={{ position: \"absolute\", top: 0, left: 0, width: \"100%\", height: \"100%\" }} />;\r\n};\r\n\r\nexport default SnowfallBackground;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}