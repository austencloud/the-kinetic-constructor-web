{"ast":null,"code":"var _jsxFileName = \"C:\\\\the-kinetic-constructor-web\\\\src\\\\components\\\\GraphEditor\\\\TurnsBox\\\\TurnsWidget\\\\TurnsDisplayFrame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport IncrementButton from \"./IncrementButton\";\nimport DirectSetTurnsDialog from \"../DirectSetTurnsDialog\";\nimport TurnsLabel from \"./TurnsLabel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  turnsDisplayFrame: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n    // Ensure buttons are spaced evenly\n    width: \"100%\",\n    // Stretch to full width of the parent container\n    flex: 1 // Allow it to take vertical space if needed\n  }\n};\nconst TurnsDisplayFrame = ({\n  color\n}) => {\n  _s();\n  const [turns, setTurns] = useState(0);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const incrementTurns = () => {\n    if (turns < 3) setTurns(prev => parseFloat(prev) + 0.5);\n  };\n  const decrementTurns = () => {\n    if (turns > 0 || turns === \"fl\") {\n      setTurns(prev => prev === \"fl\" ? 0 : parseFloat(prev) - 0.5);\n    }\n  };\n  const handleSelectTurns = value => {\n    setTurns(value === \"fl\" ? \"fl\" : parseFloat(value));\n    setIsDialogOpen(false); // Close the dialog after selecting a turn\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.turnsDisplayFrame,\n    children: [/*#__PURE__*/_jsxDEV(IncrementButton, {\n      type: \"decrement\",\n      onClick: decrementTurns,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TurnsLabel, {\n      turns: turns,\n      color: color,\n      onClick: () => setIsDialogOpen(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IncrementButton, {\n      type: \"increment\",\n      onClick: incrementTurns,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), isDialogOpen && /*#__PURE__*/_jsxDEV(DirectSetTurnsDialog, {\n      currentTurns: turns,\n      onSelectTurns: handleSelectTurns // Call handleSelectTurns\n      ,\n      onClose: () => setIsDialogOpen(false) // Ensure dialog closes properly\n      ,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(TurnsDisplayFrame, \"q8lffYEqA/MVuUxp+w3LU2S1qm0=\");\n_c = TurnsDisplayFrame;\nexport default TurnsDisplayFrame;\nvar _c;\n$RefreshReg$(_c, \"TurnsDisplayFrame\");","map":{"version":3,"names":["React","useState","IncrementButton","DirectSetTurnsDialog","TurnsLabel","jsxDEV","_jsxDEV","styles","turnsDisplayFrame","display","alignItems","justifyContent","width","flex","TurnsDisplayFrame","color","_s","turns","setTurns","isDialogOpen","setIsDialogOpen","incrementTurns","prev","parseFloat","decrementTurns","handleSelectTurns","value","style","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","currentTurns","onSelectTurns","onClose","_c","$RefreshReg$"],"sources":["C:/the-kinetic-constructor-web/src/components/GraphEditor/TurnsBox/TurnsWidget/TurnsDisplayFrame.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport IncrementButton from \"./IncrementButton\";\r\nimport DirectSetTurnsDialog from \"../DirectSetTurnsDialog\";\r\nimport TurnsLabel from \"./TurnsLabel\";\r\n\r\nconst styles = {\r\n  turnsDisplayFrame: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-evenly\", // Ensure buttons are spaced evenly\r\n    width: \"100%\", // Stretch to full width of the parent container\r\n    flex: 1, // Allow it to take vertical space if needed\r\n  },\r\n};\r\n\r\nconst TurnsDisplayFrame = ({ color }) => {\r\n  const [turns, setTurns] = useState(0);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n\r\n  const incrementTurns = () => {\r\n    if (turns < 3) setTurns((prev) => parseFloat(prev) + 0.5);\r\n  };\r\n\r\n  const decrementTurns = () => {\r\n    if (turns > 0 || turns === \"fl\") {\r\n      setTurns((prev) => (prev === \"fl\" ? 0 : parseFloat(prev) - 0.5));\r\n    }\r\n  };\r\n\r\n  const handleSelectTurns = (value) => {\r\n    setTurns(value === \"fl\" ? \"fl\" : parseFloat(value));\r\n    setIsDialogOpen(false); // Close the dialog after selecting a turn\r\n  };\r\n\r\n  return (\r\n    <div style={styles.turnsDisplayFrame}>\r\n      <IncrementButton\r\n        type=\"decrement\"\r\n        onClick={decrementTurns}\r\n        color={color}\r\n      />\r\n      <TurnsLabel\r\n        turns={turns}\r\n        color={color}\r\n        onClick={() => setIsDialogOpen(true)}\r\n      />\r\n      <IncrementButton\r\n        type=\"increment\"\r\n        onClick={incrementTurns}\r\n        color={color}\r\n      />\r\n      {isDialogOpen && (\r\n        <DirectSetTurnsDialog\r\n          currentTurns={turns}\r\n          onSelectTurns={handleSelectTurns} // Call handleSelectTurns\r\n          onClose={() => setIsDialogOpen(false)} // Ensure dialog closes properly\r\n          color={color}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TurnsDisplayFrame;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,oBAAoB,MAAM,yBAAyB;AAC1D,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAG;EACbC,iBAAiB,EAAE;IACjBC,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,cAAc;IAAE;IAChCC,KAAK,EAAE,MAAM;IAAE;IACfC,IAAI,EAAE,CAAC,CAAE;EACX;AACF,CAAC;AAED,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMoB,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIJ,KAAK,GAAG,CAAC,EAAEC,QAAQ,CAAEI,IAAI,IAAKC,UAAU,CAACD,IAAI,CAAC,GAAG,GAAG,CAAC;EAC3D,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIP,KAAK,GAAG,CAAC,IAAIA,KAAK,KAAK,IAAI,EAAE;MAC/BC,QAAQ,CAAEI,IAAI,IAAMA,IAAI,KAAK,IAAI,GAAG,CAAC,GAAGC,UAAU,CAACD,IAAI,CAAC,GAAG,GAAI,CAAC;IAClE;EACF,CAAC;EAED,MAAMG,iBAAiB,GAAIC,KAAK,IAAK;IACnCR,QAAQ,CAACQ,KAAK,KAAK,IAAI,GAAG,IAAI,GAAGH,UAAU,CAACG,KAAK,CAAC,CAAC;IACnDN,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,oBACEd,OAAA;IAAKqB,KAAK,EAAEpB,MAAM,CAACC,iBAAkB;IAAAoB,QAAA,gBACnCtB,OAAA,CAACJ,eAAe;MACd2B,IAAI,EAAC,WAAW;MAChBC,OAAO,EAAEN,cAAe;MACxBT,KAAK,EAAEA;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACF5B,OAAA,CAACF,UAAU;MACTa,KAAK,EAAEA,KAAM;MACbF,KAAK,EAAEA,KAAM;MACbe,OAAO,EAAEA,CAAA,KAAMV,eAAe,CAAC,IAAI;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACF5B,OAAA,CAACJ,eAAe;MACd2B,IAAI,EAAC,WAAW;MAChBC,OAAO,EAAET,cAAe;MACxBN,KAAK,EAAEA;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,EACDf,YAAY,iBACXb,OAAA,CAACH,oBAAoB;MACnBgC,YAAY,EAAElB,KAAM;MACpBmB,aAAa,EAAEX,iBAAkB,CAAC;MAAA;MAClCY,OAAO,EAAEA,CAAA,KAAMjB,eAAe,CAAC,KAAK,CAAE,CAAC;MAAA;MACvCL,KAAK,EAAEA;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CA9CIF,iBAAiB;AAAAwB,EAAA,GAAjBxB,iBAAiB;AAgDvB,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}