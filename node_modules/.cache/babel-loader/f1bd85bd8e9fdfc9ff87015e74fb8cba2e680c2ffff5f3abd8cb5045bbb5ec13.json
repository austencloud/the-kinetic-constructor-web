{"ast":null,"code":"var _jsxFileName = \"C:\\\\the-kinetic-constructor-web\\\\src\\\\components\\\\GraphEditor\\\\TurnsBox\\\\DirectSetTurnsDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DirectSetTurnsDialog = ({\n  currentTurns,\n  onSelectTurns,\n  onClose,\n  color\n}) => {\n  _s();\n  const turnsValues = [\"fl\", \"0\", \"0.5\", \"1\", \"1.5\", \"2\", \"2.5\", \"3\"];\n  const borderColor = color === \"blue\" ? \"#2e3192\" : \"#ed1c24\";\n  const styles = {\n    dialog: {\n      position: \"absolute\",\n      border: `2px solid ${borderColor}`,\n      borderRadius: \"10px\",\n      backgroundColor: \"#f9f9f9\",\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(4, 1fr)\",\n      // Ensure a grid layout\n      gap: \"10px\",\n      padding: \"15px\",\n      boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.2)\",\n      // Add some depth\n      fontSize: \"18px\"\n    },\n    button: {\n      border: `2px solid ${borderColor}`,\n      borderRadius: \"8px\",\n      padding: \"10px 20px\",\n      backgroundColor: \"white\",\n      cursor: \"pointer\",\n      fontSize: \"16px\",\n      transition: \"background-color 0.3s, transform 0.2s, box-shadow 0.2s\"\n    },\n    buttonHover: {\n      backgroundColor: \"#e0e7ff\",\n      // Subtle hover color\n      boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.1)\",\n      // Elevate on hover\n      transform: \"scale(1.05)\" // Slightly larger\n    },\n    buttonActive: {\n      backgroundColor: \"#c7d2fe\",\n      boxShadow: \"inset 0px 4px 8px rgba(0, 0, 0, 0.2)\" // Depressed look\n    }\n  };\n  const [hoveredButton, setHoveredButton] = useState(null);\n  const [clickedButton, setClickedButton] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.dialog,\n    children: turnsValues.map(value => /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        ...styles.button,\n        ...(hoveredButton === value ? styles.buttonHover : {}),\n        ...(clickedButton === value ? styles.buttonActive : {})\n      },\n      onMouseEnter: () => setHoveredButton(value),\n      onMouseLeave: () => setHoveredButton(null),\n      onMouseDown: () => setClickedButton(value),\n      onMouseUp: () => setClickedButton(null),\n      onClick: () => {\n        onSelectTurns(value);\n        onClose();\n      },\n      children: value\n    }, value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(DirectSetTurnsDialog, \"RFKzKZR1WFVodLgpMnJ7uQpsgyU=\");\n_c = DirectSetTurnsDialog;\nexport default DirectSetTurnsDialog;\nvar _c;\n$RefreshReg$(_c, \"DirectSetTurnsDialog\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DirectSetTurnsDialog","currentTurns","onSelectTurns","onClose","color","_s","turnsValues","borderColor","styles","dialog","position","border","borderRadius","backgroundColor","display","gridTemplateColumns","gap","padding","boxShadow","fontSize","button","cursor","transition","buttonHover","transform","buttonActive","hoveredButton","setHoveredButton","clickedButton","setClickedButton","style","children","map","value","onMouseEnter","onMouseLeave","onMouseDown","onMouseUp","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/the-kinetic-constructor-web/src/components/GraphEditor/TurnsBox/DirectSetTurnsDialog.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst DirectSetTurnsDialog = ({ currentTurns, onSelectTurns, onClose, color }) => {\r\n  const turnsValues = [\"fl\", \"0\", \"0.5\", \"1\", \"1.5\", \"2\", \"2.5\", \"3\"];\r\n  const borderColor = color === \"blue\" ? \"#2e3192\" : \"#ed1c24\";\r\n\r\n  const styles = {\r\n    dialog: {\r\n      position: \"absolute\",\r\n      border: `2px solid ${borderColor}`,\r\n      borderRadius: \"10px\",\r\n      backgroundColor: \"#f9f9f9\",\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"repeat(4, 1fr)\", // Ensure a grid layout\r\n      gap: \"10px\",\r\n      padding: \"15px\",\r\n      boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.2)\", // Add some depth\r\n      fontSize: \"18px\",\r\n    },\r\n    button: {\r\n      border: `2px solid ${borderColor}`,\r\n      borderRadius: \"8px\",\r\n      padding: \"10px 20px\",\r\n      backgroundColor: \"white\",\r\n      cursor: \"pointer\",\r\n      fontSize: \"16px\",\r\n      transition: \"background-color 0.3s, transform 0.2s, box-shadow 0.2s\",\r\n    },\r\n    buttonHover: {\r\n      backgroundColor: \"#e0e7ff\", // Subtle hover color\r\n      boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.1)\", // Elevate on hover\r\n      transform: \"scale(1.05)\", // Slightly larger\r\n    },\r\n    buttonActive: {\r\n      backgroundColor: \"#c7d2fe\",\r\n      boxShadow: \"inset 0px 4px 8px rgba(0, 0, 0, 0.2)\", // Depressed look\r\n    },\r\n  };\r\n\r\n  const [hoveredButton, setHoveredButton] = useState(null);\r\n  const [clickedButton, setClickedButton] = useState(null);\r\n\r\n  return (\r\n    <div style={styles.dialog}>\r\n      {turnsValues.map((value) => (\r\n        <button\r\n          key={value}\r\n          style={{\r\n            ...styles.button,\r\n            ...(hoveredButton === value ? styles.buttonHover : {}),\r\n            ...(clickedButton === value ? styles.buttonActive : {}),\r\n          }}\r\n          onMouseEnter={() => setHoveredButton(value)}\r\n          onMouseLeave={() => setHoveredButton(null)}\r\n          onMouseDown={() => setClickedButton(value)}\r\n          onMouseUp={() => setClickedButton(null)}\r\n          onClick={() => {\r\n            onSelectTurns(value);\r\n            onClose();\r\n          }}\r\n        >\r\n          {value}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectSetTurnsDialog;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}