{"ast":null,"code":"var _jsxFileName = \"C:\\\\the-kinetic-constructor-web\\\\src\\\\components\\\\MenuBar\\\\NavigationButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavigationWidget = ({\n  onTabChange\n}) => {\n  _s();\n  const [activeTab, setActiveTab] = useState(0);\n  const tabNames = [\"Construct ⚒️\", \"Generate 🤖\", \"Browse 🔍\", \"Learn 🧠\", \"Write ✍️\"];\n  const [buttonStyles, setButtonStyles] = useState({});\n  const updateButtonStyles = () => {\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n    const fontSize = Math.max(10, windowWidth / 120);\n    const buttonWidth = Math.max(80, windowWidth / 10);\n    const buttonHeight = Math.max(30, windowHeight / 22);\n    const styles = {\n      base: {\n        fontSize: `${fontSize}px`,\n        fontFamily: \"Georgia, serif\",\n        padding: \"5px 10px\",\n        borderRadius: \"5px\",\n        border: \"1px solid gray\",\n        cursor: \"pointer\",\n        transition: \"all 0.3s ease\"\n      },\n      active: {\n        backgroundColor: \"blue\",\n        color: \"white\",\n        fontWeight: \"bold\"\n      },\n      inactive: {\n        backgroundColor: \"white\",\n        color: \"black\"\n      },\n      dimensions: {\n        width: `${buttonWidth}px`,\n        height: `${buttonHeight}px`\n      }\n    };\n    setButtonStyles(styles);\n  };\n  useEffect(() => {\n    updateButtonStyles();\n    window.addEventListener(\"resize\", updateButtonStyles);\n    return () => {\n      window.removeEventListener(\"resize\", updateButtonStyles);\n    };\n  }, []);\n  const handleTabClick = index => {\n    setActiveTab(index);\n    if (onTabChange) {\n      onTabChange(index);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      gap: \"10px\"\n    },\n    children: tabNames.map((name, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleTabClick(index),\n      style: {\n        ...buttonStyles.base,\n        ...buttonStyles.dimensions,\n        ...(index === activeTab ? buttonStyles.active : buttonStyles.inactive)\n      },\n      children: name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(NavigationWidget, \"ZBly92rkU0sAquOdr7oCQ4RWWI4=\");\n_c = NavigationWidget;\nexport default NavigationWidget;\nvar _c;\n$RefreshReg$(_c, \"NavigationWidget\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NavigationWidget","onTabChange","_s","activeTab","setActiveTab","tabNames","buttonStyles","setButtonStyles","updateButtonStyles","windowWidth","window","innerWidth","windowHeight","innerHeight","fontSize","Math","max","buttonWidth","buttonHeight","styles","base","fontFamily","padding","borderRadius","border","cursor","transition","active","backgroundColor","color","fontWeight","inactive","dimensions","width","height","addEventListener","removeEventListener","handleTabClick","index","style","display","justifyContent","gap","children","map","name","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/the-kinetic-constructor-web/src/components/MenuBar/NavigationButton.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst NavigationWidget = ({ onTabChange }) => {\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const tabNames = [\r\n    \"Construct ⚒️\",\r\n    \"Generate 🤖\",\r\n    \"Browse 🔍\",\r\n    \"Learn 🧠\",\r\n    \"Write ✍️\",\r\n  ];\r\n  const [buttonStyles, setButtonStyles] = useState({});\r\n\r\n  const updateButtonStyles = () => {\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n\r\n    const fontSize = Math.max(10, windowWidth / 120);\r\n    const buttonWidth = Math.max(80, windowWidth / 10);\r\n    const buttonHeight = Math.max(30, windowHeight / 22);\r\n\r\n    const styles = {\r\n      base: {\r\n        fontSize: `${fontSize}px`,\r\n        fontFamily: \"Georgia, serif\",\r\n        padding: \"5px 10px\",\r\n        borderRadius: \"5px\",\r\n        border: \"1px solid gray\",\r\n        cursor: \"pointer\",\r\n        transition: \"all 0.3s ease\",\r\n      },\r\n      active: {\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n      },\r\n      inactive: {\r\n        backgroundColor: \"white\",\r\n        color: \"black\",\r\n      },\r\n      dimensions: {\r\n        width: `${buttonWidth}px`,\r\n        height: `${buttonHeight}px`,\r\n      },\r\n    };\r\n\r\n    setButtonStyles(styles);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateButtonStyles();\r\n    window.addEventListener(\"resize\", updateButtonStyles);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateButtonStyles);\r\n    };\r\n  }, []);\r\n\r\n  const handleTabClick = (index) => {\r\n    setActiveTab(index);\r\n    if (onTabChange) {\r\n      onTabChange(index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"10px\" }}>\r\n      {tabNames.map((name, index) => (\r\n        <button\r\n          key={index}\r\n          onClick={() => handleTabClick(index)}\r\n          style={{\r\n            ...buttonStyles.base,\r\n            ...buttonStyles.dimensions,\r\n            ...(index === activeTab\r\n              ? buttonStyles.active\r\n              : buttonStyles.inactive),\r\n          }}\r\n        >\r\n          {name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavigationWidget;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}