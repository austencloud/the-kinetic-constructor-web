{"ast":null,"code":"var _jsxFileName = \"C:\\\\the-kinetic-constructor-web\\\\src\\\\components\\\\SequenceWidget\\\\ButtonPanel\\\\SequenceWidgetButtonPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SequenceWidgetButtonPanel = ({\n  onAddToDictionary,\n  onSaveImage,\n  onViewFullScreen,\n  onMirrorSequence,\n  onSwapColors,\n  onRotateSequence,\n  onDeleteBeat,\n  onClearSequence\n}) => {\n  _s();\n  const [buttonSize, setButtonSize] = useState(50); // Default size\n  const [hoveredButton, setHoveredButton] = useState(null); // Track hovered button\n  const [clickedButton, setClickedButton] = useState(null); // Track clicked button\n\n  useEffect(() => {\n    // Adjust button size based on the container size\n    const updateButtonSize = () => {\n      const containerHeight = window.innerHeight; // Or use a ref to the parent container\n      const newSize = Math.max(40, Math.min(80, containerHeight / 20)); // Adjust scaling logic\n      setButtonSize(newSize);\n    };\n    updateButtonSize(); // Set initial size\n    window.addEventListener(\"resize\", updateButtonSize); // Update on resize\n\n    return () => {\n      window.removeEventListener(\"resize\", updateButtonSize); // Cleanup\n    };\n  }, []);\n  const buttonPanelStyles = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    gap: `${buttonSize * 0.2}px`,\n    // Spacing scales with button size\n    padding: \"10px\",\n    backgroundColor: \"transparent\",\n    height: \"100%\",\n    width: \"100%\"\n  };\n  const buttons = [{\n    icon: \"üìñ\",\n    title: \"Add to Dictionary\",\n    onClick: onAddToDictionary,\n    id: \"addToDictionary\"\n  }, {\n    icon: \"üíæ\",\n    title: \"Save Image\",\n    onClick: onSaveImage,\n    id: \"saveImage\"\n  }, {\n    icon: \"üëÅÔ∏è\",\n    title: \"View Full Screen\",\n    onClick: onViewFullScreen,\n    id: \"viewFullScreen\"\n  }, {\n    icon: \"üîÑ\",\n    title: \"Mirror Sequence\",\n    onClick: onMirrorSequence,\n    id: \"mirrorSequence\"\n  }, {\n    icon: \"‚ö´‚ö™\",\n    title: \"Swap Colors\",\n    onClick: onSwapColors,\n    id: \"swapColors\"\n  }, {\n    icon: \"‚ü≥\",\n    title: \"Rotate Sequence\",\n    onClick: onRotateSequence,\n    id: \"rotateSequence\"\n  }, {\n    icon: \"üóëÔ∏è\",\n    title: \"Delete Beat\",\n    onClick: onDeleteBeat,\n    id: \"deleteBeat\"\n  }, {\n    icon: \"‚ùå\",\n    title: \"Clear Sequence\",\n    onClick: onClearSequence,\n    id: \"clearSequence\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: buttonPanelStyles,\n    children: buttons.map((button, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [index === 3 || index === 6 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `${buttonSize * 0.5}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 41\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        icon: button.icon,\n        title: button.title,\n        onClick: button.onClick,\n        isHovered: hoveredButton === button.id,\n        isClicked: clickedButton === button.id,\n        onMouseEnter: () => setHoveredButton(button.id),\n        onMouseLeave: () => setHoveredButton(null),\n        onMouseDown: () => setClickedButton(button.id),\n        onMouseUp: () => setClickedButton(null),\n        buttonSize: buttonSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, button.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(SequenceWidgetButtonPanel, \"KJf0fC11PbpLx9Q2taNaB63b5iU=\");\n_c = SequenceWidgetButtonPanel;\nexport default SequenceWidgetButtonPanel;\nvar _c;\n$RefreshReg$(_c, \"SequenceWidgetButtonPanel\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SequenceWidgetButtonPanel","onAddToDictionary","onSaveImage","onViewFullScreen","onMirrorSequence","onSwapColors","onRotateSequence","onDeleteBeat","onClearSequence","_s","buttonSize","setButtonSize","hoveredButton","setHoveredButton","clickedButton","setClickedButton","updateButtonSize","containerHeight","window","innerHeight","newSize","Math","max","min","addEventListener","removeEventListener","buttonPanelStyles","display","flexDirection","alignItems","gap","padding","backgroundColor","height","width","buttons","icon","title","onClick","id","style","children","map","button","index","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","Button","isHovered","isClicked","onMouseEnter","onMouseLeave","onMouseDown","onMouseUp","_c","$RefreshReg$"],"sources":["C:/the-kinetic-constructor-web/src/components/SequenceWidget/ButtonPanel/SequenceWidgetButtonPanel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n\r\nconst SequenceWidgetButtonPanel = ({\r\n  onAddToDictionary,\r\n  onSaveImage,\r\n  onViewFullScreen,\r\n  onMirrorSequence,\r\n  onSwapColors,\r\n  onRotateSequence,\r\n  onDeleteBeat,\r\n  onClearSequence,\r\n}) => {\r\n  const [buttonSize, setButtonSize] = useState(50); // Default size\r\n  const [hoveredButton, setHoveredButton] = useState(null); // Track hovered button\r\n  const [clickedButton, setClickedButton] = useState(null); // Track clicked button\r\n\r\n  useEffect(() => {\r\n    // Adjust button size based on the container size\r\n    const updateButtonSize = () => {\r\n      const containerHeight = window.innerHeight; // Or use a ref to the parent container\r\n      const newSize = Math.max(40, Math.min(80, containerHeight / 20)); // Adjust scaling logic\r\n      setButtonSize(newSize);\r\n    };\r\n\r\n    updateButtonSize(); // Set initial size\r\n    window.addEventListener(\"resize\", updateButtonSize); // Update on resize\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateButtonSize); // Cleanup\r\n    };\r\n  }, []);\r\n\r\n  const buttonPanelStyles = {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    gap: `${buttonSize * 0.2}px`, // Spacing scales with button size\r\n    padding: \"10px\",\r\n    backgroundColor: \"transparent\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  };\r\n\r\n  const buttons = [\r\n    { icon: \"üìñ\", title: \"Add to Dictionary\", onClick: onAddToDictionary, id: \"addToDictionary\" },\r\n    { icon: \"üíæ\", title: \"Save Image\", onClick: onSaveImage, id: \"saveImage\" },\r\n    { icon: \"üëÅÔ∏è\", title: \"View Full Screen\", onClick: onViewFullScreen, id: \"viewFullScreen\" },\r\n    { icon: \"üîÑ\", title: \"Mirror Sequence\", onClick: onMirrorSequence, id: \"mirrorSequence\" },\r\n    { icon: \"‚ö´‚ö™\", title: \"Swap Colors\", onClick: onSwapColors, id: \"swapColors\" },\r\n    { icon: \"‚ü≥\", title: \"Rotate Sequence\", onClick: onRotateSequence, id: \"rotateSequence\" },\r\n    { icon: \"üóëÔ∏è\", title: \"Delete Beat\", onClick: onDeleteBeat, id: \"deleteBeat\" },\r\n    { icon: \"‚ùå\", title: \"Clear Sequence\", onClick: onClearSequence, id: \"clearSequence\" },\r\n  ];\r\n\r\n  return (\r\n    <div style={buttonPanelStyles}>\r\n      {buttons.map((button, index) => (\r\n        <React.Fragment key={button.id}>\r\n          {index === 3 || index === 6 ? <div style={{ height: `${buttonSize * 0.5}px` }}></div> : null}\r\n          <Button\r\n            icon={button.icon}\r\n            title={button.title}\r\n            onClick={button.onClick}\r\n            isHovered={hoveredButton === button.id}\r\n            isClicked={clickedButton === button.id}\r\n            onMouseEnter={() => setHoveredButton(button.id)}\r\n            onMouseLeave={() => setHoveredButton(null)}\r\n            onMouseDown={() => setClickedButton(button.id)}\r\n            onMouseUp={() => setClickedButton(null)}\r\n            buttonSize={buttonSize}\r\n          />\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SequenceWidgetButtonPanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,yBAAyB,GAAGA,CAAC;EACjCC,iBAAiB;EACjBC,WAAW;EACXC,gBAAgB;EAChBC,gBAAgB;EAChBC,YAAY;EACZC,gBAAgB;EAChBC,YAAY;EACZC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1DD,SAAS,CAAC,MAAM;IACd;IACA,MAAMoB,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,MAAMC,eAAe,GAAGC,MAAM,CAACC,WAAW,CAAC,CAAC;MAC5C,MAAMC,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,EAAE,EAAED,IAAI,CAACE,GAAG,CAAC,EAAE,EAAEN,eAAe,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;MAClEN,aAAa,CAACS,OAAO,CAAC;IACxB,CAAC;IAEDJ,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACpBE,MAAM,CAACM,gBAAgB,CAAC,QAAQ,EAAER,gBAAgB,CAAC,CAAC,CAAC;;IAErD,OAAO,MAAM;MACXE,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAET,gBAAgB,CAAC,CAAC,CAAC;IAC1D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,iBAAiB,GAAG;IACxBC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,QAAQ;IACpBC,GAAG,EAAE,GAAGpB,UAAU,GAAG,GAAG,IAAI;IAAE;IAC9BqB,OAAO,EAAE,MAAM;IACfC,eAAe,EAAE,aAAa;IAC9BC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EAED,MAAMC,OAAO,GAAG,CACd;IAAEC,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE,mBAAmB;IAAEC,OAAO,EAAErC,iBAAiB;IAAEsC,EAAE,EAAE;EAAkB,CAAC,EAC7F;IAAEH,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE,YAAY;IAAEC,OAAO,EAAEpC,WAAW;IAAEqC,EAAE,EAAE;EAAY,CAAC,EAC1E;IAAEH,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE,kBAAkB;IAAEC,OAAO,EAAEnC,gBAAgB;IAAEoC,EAAE,EAAE;EAAiB,CAAC,EAC3F;IAAEH,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE,iBAAiB;IAAEC,OAAO,EAAElC,gBAAgB;IAAEmC,EAAE,EAAE;EAAiB,CAAC,EACzF;IAAEH,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE,aAAa;IAAEC,OAAO,EAAEjC,YAAY;IAAEkC,EAAE,EAAE;EAAa,CAAC,EAC7E;IAAEH,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE,iBAAiB;IAAEC,OAAO,EAAEhC,gBAAgB;IAAEiC,EAAE,EAAE;EAAiB,CAAC,EACxF;IAAEH,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE,aAAa;IAAEC,OAAO,EAAE/B,YAAY;IAAEgC,EAAE,EAAE;EAAa,CAAC,EAC9E;IAAEH,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE,gBAAgB;IAAEC,OAAO,EAAE9B,eAAe;IAAE+B,EAAE,EAAE;EAAgB,CAAC,CACtF;EAED,oBACExC,OAAA;IAAKyC,KAAK,EAAEd,iBAAkB;IAAAe,QAAA,EAC3BN,OAAO,CAACO,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzB7C,OAAA,CAACJ,KAAK,CAACkD,QAAQ;MAAAJ,QAAA,GACZG,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,CAAC,gBAAG7C,OAAA;QAAKyC,KAAK,EAAE;UAAEP,MAAM,EAAE,GAAGvB,UAAU,GAAG,GAAG;QAAK;MAAE;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,GAAG,IAAI,eAC5FlD,OAAA,CAACmD,MAAM;QACLd,IAAI,EAAEO,MAAM,CAACP,IAAK;QAClBC,KAAK,EAAEM,MAAM,CAACN,KAAM;QACpBC,OAAO,EAAEK,MAAM,CAACL,OAAQ;QACxBa,SAAS,EAAEvC,aAAa,KAAK+B,MAAM,CAACJ,EAAG;QACvCa,SAAS,EAAEtC,aAAa,KAAK6B,MAAM,CAACJ,EAAG;QACvCc,YAAY,EAAEA,CAAA,KAAMxC,gBAAgB,CAAC8B,MAAM,CAACJ,EAAE,CAAE;QAChDe,YAAY,EAAEA,CAAA,KAAMzC,gBAAgB,CAAC,IAAI,CAAE;QAC3C0C,WAAW,EAAEA,CAAA,KAAMxC,gBAAgB,CAAC4B,MAAM,CAACJ,EAAE,CAAE;QAC/CiB,SAAS,EAAEA,CAAA,KAAMzC,gBAAgB,CAAC,IAAI,CAAE;QACxCL,UAAU,EAAEA;MAAW;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA,GAbiBN,MAAM,CAACJ,EAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcd,CACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxC,EAAA,CAzEIT,yBAAyB;AAAAyD,EAAA,GAAzBzD,yBAAyB;AA2E/B,eAAeA,yBAAyB;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}