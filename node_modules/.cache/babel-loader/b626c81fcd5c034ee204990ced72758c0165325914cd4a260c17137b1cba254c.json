{"ast":null,"code":"var _jsxFileName = \"C:\\\\the-kinetic-constructor-web\\\\src\\\\components\\\\Backgrounds\\\\SnowfallBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport SnowflakeManager from \"./SnowflakeManager\";\nimport SantaManager from \"./SantaManager\";\nimport ShootingStarManager from \"./ShootingStarManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnowfallBackground = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const snowflakeManager = useRef(new SnowflakeManager());\n  const santaManager = useRef(new SantaManager());\n  const shootingStarManager = useRef(new ShootingStarManager());\n  const animate = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const width = canvas.width;\n    const height = canvas.height;\n    ctx.clearRect(0, 0, width, height);\n\n    // Draw gradient background\n    const gradient = ctx.createLinearGradient(0, 0, 0, height);\n    gradient.addColorStop(0, \"#142030\");\n    gradient.addColorStop(1, \"#325078\");\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, width, height);\n\n    // Draw and animate elements\n    snowflakeManager.current.draw(ctx, width, height);\n    santaManager.current.draw(ctx, width, height);\n    shootingStarManager.current.manageShootingStar(width, height);\n    shootingStarManager.current.animateShootingStar(width, height);\n    shootingStarManager.current.draw(ctx, width, height);\n    requestAnimationFrame(animate);\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n\n      // Reset and reinitialize snowflakes to match the new canvas size\n      snowflakeManager.current.clear(); // Clear the current snowflakes\n      snowflakeManager.current.initialize(canvas.width, canvas.height, 100);\n\n      // Adjust other managers to fit the new canvas size\n      santaManager.current.initialize(canvas.width, canvas.height);\n    };\n    resizeCanvas(); // Set initial size\n    window.addEventListener(\"resize\", resizeCanvas); // Listen for window resize\n\n    requestAnimationFrame(animate); // Start animation\n\n    return () => {\n      window.removeEventListener(\"resize\", resizeCanvas); // Clean up listener\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n};\n_s(SnowfallBackground, \"mOOA1K7uWm+Bc6bA5cGaQfjTB94=\");\n_c = SnowfallBackground;\nexport default SnowfallBackground;\nvar _c;\n$RefreshReg$(_c, \"SnowfallBackground\");","map":{"version":3,"names":["React","useRef","useEffect","SnowflakeManager","SantaManager","ShootingStarManager","jsxDEV","_jsxDEV","SnowfallBackground","_s","canvasRef","snowflakeManager","santaManager","shootingStarManager","animate","canvas","current","ctx","getContext","width","height","clearRect","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","draw","manageShootingStar","animateShootingStar","requestAnimationFrame","resizeCanvas","window","innerWidth","innerHeight","clear","initialize","addEventListener","removeEventListener","ref","style","position","top","left","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/the-kinetic-constructor-web/src/components/Backgrounds/SnowfallBackground.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport SnowflakeManager from \"./SnowflakeManager\";\r\nimport SantaManager from \"./SantaManager\";\r\nimport ShootingStarManager from \"./ShootingStarManager\";\r\n\r\nconst SnowfallBackground = () => {\r\n  const canvasRef = useRef(null);\r\n  const snowflakeManager = useRef(new SnowflakeManager());\r\n  const santaManager = useRef(new SantaManager());\r\n  const shootingStarManager = useRef(new ShootingStarManager());\r\n\r\n  const animate = () => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const width = canvas.width;\r\n    const height = canvas.height;\r\n\r\n    ctx.clearRect(0, 0, width, height);\r\n\r\n    // Draw gradient background\r\n    const gradient = ctx.createLinearGradient(0, 0, 0, height);\r\n    gradient.addColorStop(0, \"#142030\");\r\n    gradient.addColorStop(1, \"#325078\");\r\n    ctx.fillStyle = gradient;\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    // Draw and animate elements\r\n    snowflakeManager.current.draw(ctx, width, height);\r\n    santaManager.current.draw(ctx, width, height);\r\n    shootingStarManager.current.manageShootingStar(width, height);\r\n    shootingStarManager.current.animateShootingStar(width, height);\r\n    shootingStarManager.current.draw(ctx, width, height);\r\n\r\n    requestAnimationFrame(animate);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const resizeCanvas = () => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n\r\n      // Reset and reinitialize snowflakes to match the new canvas size\r\n      snowflakeManager.current.clear(); // Clear the current snowflakes\r\n      snowflakeManager.current.initialize(canvas.width, canvas.height, 100);\r\n\r\n      // Adjust other managers to fit the new canvas size\r\n      santaManager.current.initialize(canvas.width, canvas.height);\r\n    };\r\n\r\n    resizeCanvas(); // Set initial size\r\n    window.addEventListener(\"resize\", resizeCanvas); // Listen for window resize\r\n\r\n    requestAnimationFrame(animate); // Start animation\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", resizeCanvas); // Clean up listener\r\n    };\r\n  }, []);\r\n\r\n  return <canvas ref={canvasRef} style={{ position: \"absolute\", top: 0, left: 0 }} />;\r\n};\r\n\r\nexport default SnowfallBackground;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMU,gBAAgB,GAAGV,MAAM,CAAC,IAAIE,gBAAgB,CAAC,CAAC,CAAC;EACvD,MAAMS,YAAY,GAAGX,MAAM,CAAC,IAAIG,YAAY,CAAC,CAAC,CAAC;EAC/C,MAAMS,mBAAmB,GAAGZ,MAAM,CAAC,IAAII,mBAAmB,CAAC,CAAC,CAAC;EAE7D,MAAMS,OAAO,GAAGA,CAAA,KAAM;IACpB,MAAMC,MAAM,GAAGL,SAAS,CAACM,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMC,KAAK,GAAGJ,MAAM,CAACI,KAAK;IAC1B,MAAMC,MAAM,GAAGL,MAAM,CAACK,MAAM;IAE5BH,GAAG,CAACI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEF,KAAK,EAAEC,MAAM,CAAC;;IAElC;IACA,MAAME,QAAQ,GAAGL,GAAG,CAACM,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEH,MAAM,CAAC;IAC1DE,QAAQ,CAACE,YAAY,CAAC,CAAC,EAAE,SAAS,CAAC;IACnCF,QAAQ,CAACE,YAAY,CAAC,CAAC,EAAE,SAAS,CAAC;IACnCP,GAAG,CAACQ,SAAS,GAAGH,QAAQ;IACxBL,GAAG,CAACS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEP,KAAK,EAAEC,MAAM,CAAC;;IAEjC;IACAT,gBAAgB,CAACK,OAAO,CAACW,IAAI,CAACV,GAAG,EAAEE,KAAK,EAAEC,MAAM,CAAC;IACjDR,YAAY,CAACI,OAAO,CAACW,IAAI,CAACV,GAAG,EAAEE,KAAK,EAAEC,MAAM,CAAC;IAC7CP,mBAAmB,CAACG,OAAO,CAACY,kBAAkB,CAACT,KAAK,EAAEC,MAAM,CAAC;IAC7DP,mBAAmB,CAACG,OAAO,CAACa,mBAAmB,CAACV,KAAK,EAAEC,MAAM,CAAC;IAC9DP,mBAAmB,CAACG,OAAO,CAACW,IAAI,CAACV,GAAG,EAAEE,KAAK,EAAEC,MAAM,CAAC;IAEpDU,qBAAqB,CAAChB,OAAO,CAAC;EAChC,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,MAAMa,MAAM,GAAGL,SAAS,CAACM,OAAO;IAChC,IAAI,CAACD,MAAM,EAAE;IAEb,MAAMgB,YAAY,GAAGA,CAAA,KAAM;MACzBhB,MAAM,CAACI,KAAK,GAAGa,MAAM,CAACC,UAAU;MAChClB,MAAM,CAACK,MAAM,GAAGY,MAAM,CAACE,WAAW;;MAElC;MACAvB,gBAAgB,CAACK,OAAO,CAACmB,KAAK,CAAC,CAAC,CAAC,CAAC;MAClCxB,gBAAgB,CAACK,OAAO,CAACoB,UAAU,CAACrB,MAAM,CAACI,KAAK,EAAEJ,MAAM,CAACK,MAAM,EAAE,GAAG,CAAC;;MAErE;MACAR,YAAY,CAACI,OAAO,CAACoB,UAAU,CAACrB,MAAM,CAACI,KAAK,EAAEJ,MAAM,CAACK,MAAM,CAAC;IAC9D,CAAC;IAEDW,YAAY,CAAC,CAAC,CAAC,CAAC;IAChBC,MAAM,CAACK,gBAAgB,CAAC,QAAQ,EAAEN,YAAY,CAAC,CAAC,CAAC;;IAEjDD,qBAAqB,CAAChB,OAAO,CAAC,CAAC,CAAC;;IAEhC,OAAO,MAAM;MACXkB,MAAM,CAACM,mBAAmB,CAAC,QAAQ,EAAEP,YAAY,CAAC,CAAC,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOxB,OAAA;IAAQgC,GAAG,EAAE7B,SAAU;IAAC8B,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,GAAG,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAE;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrF,CAAC;AAACtC,EAAA,CA1DID,kBAAkB;AAAAwC,EAAA,GAAlBxC,kBAAkB;AA4DxB,eAAeA,kBAAkB;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}