{"ast":null,"code":"var _jsxFileName = \"C:\\\\the-kinetic-constructor-web\\\\src\\\\components\\\\SequenceWidget\\\\ButtonPanel\\\\SequenceWidgetButtonPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport SequenceWidgetButton from \"./SequenceWidgetButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SequenceWidgetButtonPanel = ({\n  onAddToDictionary,\n  onSaveImage,\n  onViewFullScreen,\n  onMirrorSequence,\n  onSwapColors,\n  onRotateSequence,\n  onDeleteBeat,\n  onClearSequence\n}) => {\n  _s();\n  const [buttonSize, setButtonSize] = useState(50); // Default size\n  const [hoveredButton, setHoveredButton] = useState(null); // Track hovered button\n  const [clickedButton, setClickedButton] = useState(null); // Track clicked button\n\n  useEffect(() => {\n    const updateButtonSize = () => {\n      const containerHeight = window.innerHeight;\n      const newSize = Math.max(40, Math.min(80, containerHeight / 20));\n      setButtonSize(newSize);\n    };\n    updateButtonSize();\n    window.addEventListener(\"resize\", updateButtonSize);\n    return () => window.removeEventListener(\"resize\", updateButtonSize);\n  }, []);\n  const buttonPanelStyles = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    gap: `${buttonSize * 0.2}px`,\n    padding: \"10px\",\n    height: \"100%\",\n    width: \"100%\"\n  };\n  const buttons = [{\n    icon: require(\"./icons/add_to_dictionary.png\"),\n    title: \"Add to Dictionary\",\n    onClick: onAddToDictionary,\n    id: \"addToDictionary\"\n  }, {\n    icon: require(\"./icons/save_image.png\"),\n    title: \"Save Image\",\n    onClick: onSaveImage,\n    id: \"saveImage\"\n  }, {\n    icon: require(\"./icons/eye.png\"),\n    title: \"View Full Screen\",\n    onClick: onViewFullScreen,\n    id: \"viewFullScreen\"\n  }, {\n    icon: require(\"./icons/mirror.png\"),\n    title: \"Mirror Sequence\",\n    onClick: onMirrorSequence,\n    id: \"mirrorSequence\"\n  }, {\n    icon: require(\"./icons/yinyang1.png\"),\n    title: \"Swap Colors\",\n    onClick: onSwapColors,\n    id: \"swapColors\"\n  }, {\n    icon: require(\"./icons/rotate.png\"),\n    title: \"Rotate Sequence\",\n    onClick: onRotateSequence,\n    id: \"rotateSequence\"\n  }, {\n    icon: require(\"./icons/delete.png\"),\n    title: \"Delete Beat\",\n    onClick: onDeleteBeat,\n    id: \"deleteBeat\"\n  }, {\n    icon: require(\"./icons/clear.png\"),\n    title: \"Clear Sequence\",\n    onClick: onClearSequence,\n    id: \"clearSequence\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: buttonPanelStyles,\n    children: buttons.map((button, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [index === 3 || index === 6 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `${buttonSize * 0.5}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this) : null, /*#__PURE__*/_jsxDEV(SequenceWidgetButton, {\n        icon: button.icon,\n        title: button.title,\n        onClick: button.onClick,\n        isHovered: hoveredButton === button.id,\n        isClicked: clickedButton === button.id,\n        onMouseEnter: () => setHoveredButton(button.id),\n        onMouseLeave: () => setHoveredButton(null),\n        onMouseDown: () => setClickedButton(button.id),\n        onMouseUp: () => setClickedButton(null),\n        buttonSize: buttonSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, button.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(SequenceWidgetButtonPanel, \"KJf0fC11PbpLx9Q2taNaB63b5iU=\");\n_c = SequenceWidgetButtonPanel;\nexport default SequenceWidgetButtonPanel;\nvar _c;\n$RefreshReg$(_c, \"SequenceWidgetButtonPanel\");","map":{"version":3,"names":["React","useEffect","useState","SequenceWidgetButton","jsxDEV","_jsxDEV","SequenceWidgetButtonPanel","onAddToDictionary","onSaveImage","onViewFullScreen","onMirrorSequence","onSwapColors","onRotateSequence","onDeleteBeat","onClearSequence","_s","buttonSize","setButtonSize","hoveredButton","setHoveredButton","clickedButton","setClickedButton","updateButtonSize","containerHeight","window","innerHeight","newSize","Math","max","min","addEventListener","removeEventListener","buttonPanelStyles","display","flexDirection","alignItems","gap","padding","height","width","buttons","icon","require","title","onClick","id","style","children","map","button","index","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","isHovered","isClicked","onMouseEnter","onMouseLeave","onMouseDown","onMouseUp","_c","$RefreshReg$"],"sources":["C:/the-kinetic-constructor-web/src/components/SequenceWidget/ButtonPanel/SequenceWidgetButtonPanel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport SequenceWidgetButton from \"./SequenceWidgetButton\";\r\n\r\nconst SequenceWidgetButtonPanel = ({\r\n  onAddToDictionary,\r\n  onSaveImage,\r\n  onViewFullScreen,\r\n  onMirrorSequence,\r\n  onSwapColors,\r\n  onRotateSequence,\r\n  onDeleteBeat,\r\n  onClearSequence,\r\n}) => {\r\n  const [buttonSize, setButtonSize] = useState(50); // Default size\r\n  const [hoveredButton, setHoveredButton] = useState(null); // Track hovered button\r\n  const [clickedButton, setClickedButton] = useState(null); // Track clicked button\r\n\r\n  useEffect(() => {\r\n    const updateButtonSize = () => {\r\n      const containerHeight = window.innerHeight;\r\n      const newSize = Math.max(40, Math.min(80, containerHeight / 20));\r\n      setButtonSize(newSize);\r\n    };\r\n\r\n    updateButtonSize();\r\n    window.addEventListener(\"resize\", updateButtonSize);\r\n    return () => window.removeEventListener(\"resize\", updateButtonSize);\r\n  }, []);\r\n\r\n  const buttonPanelStyles = {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    gap: `${buttonSize * 0.2}px`,\r\n    padding: \"10px\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  };\r\n\r\n  const buttons = [\r\n    {\r\n      icon: require(\"./icons/add_to_dictionary.png\"),\r\n      title: \"Add to Dictionary\",\r\n      onClick: onAddToDictionary,\r\n      id: \"addToDictionary\",\r\n    },\r\n    {\r\n      icon: require(\"./icons/save_image.png\"),\r\n      title: \"Save Image\",\r\n      onClick: onSaveImage,\r\n      id: \"saveImage\",\r\n    },\r\n    {\r\n      icon: require(\"./icons/eye.png\"),\r\n      title: \"View Full Screen\",\r\n      onClick: onViewFullScreen,\r\n      id: \"viewFullScreen\",\r\n    },\r\n    {\r\n      icon: require(\"./icons/mirror.png\"),\r\n      title: \"Mirror Sequence\",\r\n      onClick: onMirrorSequence,\r\n      id: \"mirrorSequence\",\r\n    },\r\n    {\r\n      icon: require(\"./icons/yinyang1.png\"),\r\n      title: \"Swap Colors\",\r\n      onClick: onSwapColors,\r\n      id: \"swapColors\",\r\n    },\r\n    {\r\n      icon: require(\"./icons/rotate.png\"),\r\n      title: \"Rotate Sequence\",\r\n      onClick: onRotateSequence,\r\n      id: \"rotateSequence\",\r\n    },\r\n    {\r\n      icon: require(\"./icons/delete.png\"),\r\n      title: \"Delete Beat\",\r\n      onClick: onDeleteBeat,\r\n      id: \"deleteBeat\",\r\n    },\r\n    {\r\n      icon: require(\"./icons/clear.png\"),\r\n      title: \"Clear Sequence\",\r\n      onClick: onClearSequence,\r\n      id: \"clearSequence\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div style={buttonPanelStyles}>\r\n      {buttons.map((button, index) => (\r\n        <React.Fragment key={button.id}>\r\n          {/* Spacer between groups */}\r\n          {index === 3 || index === 6 ? (\r\n            <div style={{ height: `${buttonSize * 0.5}px` }}></div>\r\n          ) : null}\r\n          <SequenceWidgetButton\r\n            icon={button.icon}\r\n            title={button.title}\r\n            onClick={button.onClick}\r\n            isHovered={hoveredButton === button.id}\r\n            isClicked={clickedButton === button.id}\r\n            onMouseEnter={() => setHoveredButton(button.id)}\r\n            onMouseLeave={() => setHoveredButton(null)}\r\n            onMouseDown={() => setClickedButton(button.id)}\r\n            onMouseUp={() => setClickedButton(null)}\r\n            buttonSize={buttonSize}\r\n          />\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SequenceWidgetButtonPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}